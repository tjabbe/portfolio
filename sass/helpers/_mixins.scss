@mixin box-shadow($params) {
  -webkit-box-shadow: $params;
     -moz-box-shadow: $params;
          box-shadow: $params;
}

.clearfix {

  &::after {
    content: '';
    display: table;
    clear: both;
  }

}

/* FONTS */
@mixin font-face($style-name, $file, $family, $category:"") {
    $filepath: "../fonts/" + $family + "/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    }
    %#{$style-name} {
        font: {
            @if $category != "" {
                family: "#{$style-name}", #{$category};
            }
            @else {
                family: "#{$style-name}";
                weight: normal;
            }
        }
    }
}


/*

The good old pseudo element display inline block height 100% trick.

*/

%vertical-center-container {

  white-space: nowrap;
  
  &::before {
    content: '';
    display: inline-block;
    height: 100%;
    margin-right: -0.25em;
    vertical-align: middle;
  }
}

%vertical-center-block {
  display: inline-block;
  vertical-align: middle;
  white-space: normal;
}

%border-box {
	box-sizing: border-box;
}

@mixin max-width($point) {
  @if $point == computer {
    @media (max-width: 1024px) { @content; }
  }
  @else if $point == tablet {
    @media (max-width: 768px) { @content; }
  }
  @else if $point == mobile {
    @media (max-width: 480px)  { @content; }
  }
}